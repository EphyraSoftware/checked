{
  "name": "checked-dev",
  "private": true,
  "workspaces": [
    "ui",
    "tests"
  ],
  "scripts": {
    "start": "AGENTS=2 BOOTSTRAP_PORT=$(port) SIGNAL_PORT=$(port) npm run network",
    "network": "hc s clean && npm run build:happ:opt && UI_PORT=8888 concurrently \"npm start -w ui\" \"npm run launch:happ\" \"echo 'Not running holochain-playground'\"",
    "test:unit": "cargo test",
    "test:integration": "npm run build:zomes && hc app pack workdir --recursive && RUST_LOG=warn WASM_LOG=info npm t -w tests",
    "test:cli": "npm run build:happ:opt && cargo test --release --manifest-path ./checked_cli/Cargo.toml -- --test-threads=1",
    "test": "npm run test:unit && npm run test:integration && npm run test:cli",
    "launch:happ": "hc-spin -n $AGENTS --ui-port $UI_PORT workdir/checked.happ",
    "start:tauri": "AGENTS=2 BOOTSTRAP_PORT=$(port) SIGNAL_PORT=$(port) npm run network:tauri",
    "network:tauri": "hc s clean && npm run build:happ:opt && UI_PORT=8888 concurrently \"npm start -w ui\" \"npm run launch:tauri\" \"echo 'Not running holochain-playground'\"",
    "launch:tauri": "concurrently \"hc run-local-services --bootstrap-port $BOOTSTRAP_PORT --signal-port $SIGNAL_PORT\" \"echo pass | RUST_LOG=warn hc launch --piped -n $AGENTS workdir/checked.happ --ui-port $UI_PORT network --bootstrap http://127.0.0.1:\"$BOOTSTRAP_PORT\" webrtc ws://127.0.0.1:\"$SIGNAL_PORT\"\"",
    "package": "npm run build:happ:opt && npm run package -w ui && hc web-app pack workdir --recursive",
    "build:happ": "npm run build:zomes && hc app pack workdir --recursive",
    "build:happ:opt": "npm run build:zomes && find ./target/wasm32-unknown-unknown/release/*.wasm | xargs -I '{}' wasm-opt '{}' -O2 --output '{}' && hc app pack workdir --recursive",
    "build:zomes": "RUSTFLAGS='' CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "lint": "npm run -w ui lint && npm run -w tests lint && cargo clippy && cargo clippy --manifest-path ./checked_cli/Cargo.toml",
    "format": "npm run -w ui format && npm run -w tests format && cargo fmt && cargo fmt --manifest-path ./checked_cli/Cargo.toml"
  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.1.1",
    "@holochain/hc-spin": "^0.300.3",
    "concurrently": "^6.2.1",
    "new-port-cli": "^1.0.0",
    "rimraf": "^3.0.2"
  },
  "engines": {
    "npm": ">=7.0.0"
  }
}
